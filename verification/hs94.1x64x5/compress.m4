dnl Process this m4 file to produce ]C] language file.
dnl
dnl If you see this line, you can ignore the next one.
dnl /* Do not edit this file. It is produced from the corresponding .m4 source */
dnl
dnl
include(`foreach.m4')dnl
include(`forloop.m4')dnl

define(`CONCAT', `$1$2')dnl

define(`CMP_REAL',changequote(`[', `]')dnl
[dnl
      subroutine CompressWr_real_$1(unitid, R)
        IMPLICIT NONE
        integer :: unitid
        ifelse($1, `0', `real*8', `real*8, DIMENSION(forloop(`i', `1', $1, `ifelse(i, `1', `:', `, :')'))') :: R
        ifelse($1, `0', `real*8', `real*8, DIMENSION(SIZEOF(R)/8)') :: F
        ifelse($1, `0', `real*4', `real*4, DIMENSION(SIZEOF(R)/8)') :: C
        CALL TIMER_START('ArgCompress',myThid)
        F = reshape(R, shape(F))
        C = REAL(F, 4)
        CALL TIMER_STOP('ArgCompress',myThid)
        CALL TIMER_START('ArgWrite',myThid)
        print *, 'write ', SIZEOF(C)
        write(unit=unitid) C
        CALL TIMER_STOP('ArgWrite',myThid)
      END subroutine CompressWr_real_$1

      subroutine CompressRd_real_$1(unitid, D)
        IMPLICIT NONE
        integer :: unitid
        ifelse($1, `0', `real*8', `real*8, DIMENSION(forloop(`i', `1', $1, `ifelse(i, `1', `:', `, :')'))') :: D
        real*4, DIMENSION(SIZEOF(D)/8) :: C
        real*8, DIMENSION(SIZEOF(D)/8) :: F
        CALL TIMER_START('ArgRead',myThid)
        print *, 'read ', SIZEOF(C)
        read(unit=unitid) C
        CALL TIMER_STOP('ArgRead',myThid)
        CALL TIMER_START('ArgDecompress',myThid)
        F = REAL(C, 8)
        D = reshape(F, shape(D))
        CALL TIMER_STOP('ArgDecompress',myThid)
      END subroutine CompressRd_real_$1

]changequote([`], [']))dnl
dnl

forloop(`i', `1', `6', `CMP_REAL(i)')
